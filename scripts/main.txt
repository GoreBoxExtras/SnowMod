print("MainLoaded")
//////////// listeners //

ListenForInput
ListenForPlayer

//////////// variables //

var = {}

var._DEBUG = true
var._STOP = false

var.KEYBIND = "P"

var.debounce = 0

var.SnowModel = "snowball.fbx"
var.SnowDensity = 800 // recommended: 300 for mid end devices 100 for low end
var.SnowFrequency = 2

var.Balls = []

var.PosY = RandomFloat({"min": 35, "max": 55})
var.XPosMax = 15        
var.ZPosMax = 15
var.PlayerPosX = @posX
var.PlayerPosZ = @posZ
var.PlayerPosY = @posY

var.MaxLife = RandomFloat({"min": 1, "max": 6})

var.itercount = 0
//////////// loops //

loop = {}
// maybe add a cache system where u store the balls and reuse them
loop._events = function()

    while _events.len > 0
        _nextEvent = _events.pull
        _nextEvent.invoke(_nextEvent.args)
    end while

end function

loop.SnowHandling = function()

    if (var.Balls.len < var.SnowDensity) then
        func.SpawnBall("snowball")
         SendChatMessage({"sender": "DEBUG", "message": "man how we got bal at " + var.Balls.len})
    end if
        
    if var.itercount >= 15 then
        var.Balls = func.CheckTable(var.Balls, RandomFloat({"min": 1, "max": 8})) // referencing randomness from a variable isnt working?!
        var.itercount = 0
    end if

    var.itercount = var.itercount + 1

end function

//////////// functions //

func = {}

func.SpawnBall = function(script)

    rndVar = RandomFloat({"min": 0, "max": 50})
    name = ("SnowParticle" + (rndVar))

    RandomXPos = var.PlayerPosX + RandomInt({"min": -(var.XPosMax / 2), "max": (var.XPosMax / 2)})
    RandomZPos = var.PlayerPosZ + RandomInt({"min": -(var.ZPosMax / 2), "max": (var.ZPosMax / 2)})

    print(RandomXPos + " " + RandomZPos + " " + (var.PosY + var.PlayerPosY))

    InstantiateModel({"model": var.SnowModel, "name": name, "x": RandomXPos, "y": (var.PosY + var.PlayerPosY), "z": RandomZPos,"rotX": 0, "rotY": 0, "rotZ": 0, "rotW": 0, "scale": RandomFloat({"min": 0.3, "max": 0.8}), "collisions": false, "convex": false})
    ExecuteScript({"target": name , "script": script})
    
    var.Balls = func.ListAdd(var.Balls, name)

end function


func.CheckTable = function(table, min)

    result = table[0:]
    for index in indexes(result)

        for kv in result[index]
            if time() - kv.value >= min then

                ExecuteScript({"target": kv.key, "script": "destroy"}) // alternative to destroy() since its borken atm
                // Destroy({"name": kv.key})
                result.remove(index)

                shouldidoe = RandomInt({"min": 0, "max": 1})
                if shouldidoe == 1 then
                    result func.CheckTable(result, min)
                else
                    return result
                end if

            end if

        end for       
    end for

    return result

end function

func.ListAdd = function(list, value)

    result = list[0:]
    result.insert(result.len, {value:time()})

    return result

end function

///////////////////////

func.Main = function(list)

    while true    
        
        // event and listeners loop
        loop._events()       

        // snow handling loop
        loop.SnowHandling()
        

        // fallback forceful stop
        if var._STOP == true then
            break
        end if

        yield
    end while

end function

//////////// SCRIPT //

OnKeyPress = function(args)
    key = args.key

    if key == var.KEYBIND then
        print("yeye ran")
        print("key p broke the loop im the martricx")
        var._STOP = true
    end if


    // if key == "P" then
    //     if var.PAUSE == 1 then
    //         var.PAUSE = 0
    //     else
    //         var.PAUSE = 1
    //     end if
    // end if

end function

OnLocalDied = function(args)
    print("broked the loop im the martricx")
    var._STOP = true
end function 

func.Main()
